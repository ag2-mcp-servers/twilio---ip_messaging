# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T11:02:12+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import AnyUrl, BaseModel, Field, RootModel, constr


class BindingEnumBindingType(Enum):
    gcm = 'gcm'
    apn = 'apn'
    fcm = 'fcm'


class ChannelEnumChannelType(Enum):
    public = 'public'
    private = 'private'


class ChannelEnumWebhookEnabledType(Enum):
    true = 'true'
    false = 'false'


class ChannelWebhookEnumMethod(Enum):
    GET = 'GET'
    POST = 'POST'


class ChannelWebhookEnumType(Enum):
    webhook = 'webhook'
    trigger = 'trigger'
    studio = 'studio'


class CredentialEnumPushService(Enum):
    gcm = 'gcm'
    apn = 'apn'
    fcm = 'fcm'


class IpMessagingV2Credential(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    date_created: Optional[datetime] = None
    date_updated: Optional[datetime] = None
    friendly_name: Optional[str] = None
    sandbox: Optional[str] = None
    sid: Optional[
        constr(pattern=r'^CR[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    type: Optional[CredentialEnumPushService] = None
    url: Optional[AnyUrl] = None


class IpMessagingV2Service(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    consumption_report_interval: Optional[int] = None
    date_created: Optional[datetime] = None
    date_updated: Optional[datetime] = None
    default_channel_creator_role_sid: Optional[
        constr(pattern=r'^RL[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    default_channel_role_sid: Optional[
        constr(pattern=r'^RL[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    default_service_role_sid: Optional[
        constr(pattern=r'^RL[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    friendly_name: Optional[str] = None
    limits: Optional[Any] = None
    links: Optional[Dict[str, Any]] = None
    media: Optional[Any] = None
    notifications: Optional[Any] = None
    post_webhook_retry_count: Optional[int] = None
    post_webhook_url: Optional[str] = None
    pre_webhook_retry_count: Optional[int] = None
    pre_webhook_url: Optional[str] = None
    reachability_enabled: Optional[bool] = None
    read_status_enabled: Optional[bool] = None
    sid: Optional[
        constr(pattern=r'^IS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    typing_indicator_timeout: Optional[int] = None
    url: Optional[AnyUrl] = None
    webhook_filters: Optional[List[str]] = None
    webhook_method: Optional[str] = None


class IpMessagingV2ServiceBinding(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    binding_type: Optional[BindingEnumBindingType] = None
    credential_sid: Optional[
        constr(pattern=r'^CR[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    date_created: Optional[datetime] = None
    date_updated: Optional[datetime] = None
    endpoint: Optional[str] = None
    identity: Optional[str] = None
    links: Optional[Dict[str, Any]] = None
    message_types: Optional[List[str]] = None
    service_sid: Optional[
        constr(pattern=r'^IS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    sid: Optional[
        constr(pattern=r'^BS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    url: Optional[AnyUrl] = None


class IpMessagingV2ServiceChannel(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    attributes: Optional[str] = None
    created_by: Optional[str] = None
    date_created: Optional[datetime] = None
    date_updated: Optional[datetime] = None
    friendly_name: Optional[str] = None
    links: Optional[Dict[str, Any]] = None
    members_count: Optional[int] = None
    messages_count: Optional[int] = None
    service_sid: Optional[
        constr(pattern=r'^IS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    sid: Optional[
        constr(pattern=r'^CH[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    type: Optional[ChannelEnumChannelType] = None
    unique_name: Optional[str] = None
    url: Optional[AnyUrl] = None


class IpMessagingV2ServiceChannelChannelWebhook(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    channel_sid: Optional[
        constr(pattern=r'^CH[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    configuration: Optional[Any] = None
    date_created: Optional[datetime] = None
    date_updated: Optional[datetime] = None
    service_sid: Optional[
        constr(pattern=r'^IS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    sid: Optional[
        constr(pattern=r'^WH[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    type: Optional[str] = None
    url: Optional[AnyUrl] = None


class IpMessagingV2ServiceChannelInvite(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    channel_sid: Optional[
        constr(pattern=r'^CH[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    created_by: Optional[str] = None
    date_created: Optional[datetime] = None
    date_updated: Optional[datetime] = None
    identity: Optional[str] = None
    role_sid: Optional[
        constr(pattern=r'^RL[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    service_sid: Optional[
        constr(pattern=r'^IS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    sid: Optional[
        constr(pattern=r'^IN[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    url: Optional[AnyUrl] = None


class IpMessagingV2ServiceChannelMember(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    attributes: Optional[str] = None
    channel_sid: Optional[
        constr(pattern=r'^CH[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    date_created: Optional[datetime] = None
    date_updated: Optional[datetime] = None
    identity: Optional[str] = None
    last_consumed_message_index: Optional[int] = None
    last_consumption_timestamp: Optional[datetime] = None
    role_sid: Optional[
        constr(pattern=r'^RL[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    service_sid: Optional[
        constr(pattern=r'^IS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    sid: Optional[
        constr(pattern=r'^MB[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    url: Optional[AnyUrl] = None


class IpMessagingV2ServiceChannelMessage(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    attributes: Optional[str] = None
    body: Optional[str] = None
    channel_sid: Optional[
        constr(pattern=r'^CH[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    date_created: Optional[datetime] = None
    date_updated: Optional[datetime] = None
    from_: Optional[str] = Field(None, alias='from')
    index: Optional[int] = None
    last_updated_by: Optional[str] = None
    media: Optional[Any] = None
    service_sid: Optional[
        constr(pattern=r'^IS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    sid: Optional[
        constr(pattern=r'^IM[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    to: Optional[
        constr(pattern=r'^CH[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    type: Optional[str] = None
    url: Optional[AnyUrl] = None
    was_edited: Optional[bool] = None


class IpMessagingV2ServiceUser(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    attributes: Optional[str] = None
    date_created: Optional[datetime] = None
    date_updated: Optional[datetime] = None
    friendly_name: Optional[str] = None
    identity: Optional[str] = None
    is_notifiable: Optional[bool] = None
    is_online: Optional[bool] = None
    joined_channels_count: Optional[int] = None
    links: Optional[Dict[str, Any]] = None
    role_sid: Optional[
        constr(pattern=r'^RL[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    service_sid: Optional[
        constr(pattern=r'^IS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    sid: Optional[
        constr(pattern=r'^US[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    url: Optional[AnyUrl] = None


class MemberEnumWebhookEnabledType(Enum):
    true = 'true'
    false = 'false'


class MessageEnumOrderType(Enum):
    asc = 'asc'
    desc = 'desc'


class MessageEnumWebhookEnabledType(Enum):
    true = 'true'
    false = 'false'


class RoleEnumRoleType(Enum):
    channel = 'channel'
    deployment = 'deployment'


class UserBindingEnumBindingType(Enum):
    gcm = 'gcm'
    apn = 'apn'
    fcm = 'fcm'


class UserChannelEnumChannelStatus(Enum):
    joined = 'joined'
    invited = 'invited'
    not_participating = 'not_participating'


class UserChannelEnumNotificationLevel(Enum):
    default = 'default'
    muted = 'muted'


class UserEnumWebhookEnabledType(Enum):
    true = 'true'
    false = 'false'


class Meta(BaseModel):
    first_page_url: Optional[AnyUrl] = None
    key: Optional[str] = None
    next_page_url: Optional[AnyUrl] = None
    page: Optional[int] = None
    page_size: Optional[int] = None
    previous_page_url: Optional[AnyUrl] = None
    url: Optional[AnyUrl] = None


class V2CredentialsGetResponse(BaseModel):
    credentials: Optional[List[IpMessagingV2Credential]] = None
    meta: Optional[Meta] = None


class V2CredentialsPostRequest(BaseModel):
    ApiKey: Optional[str] = Field(None, description='')
    Certificate: Optional[str] = Field(None, description='')
    FriendlyName: Optional[str] = Field(None, description='')
    PrivateKey: Optional[str] = Field(None, description='')
    Sandbox: Optional[bool] = Field(None, description='')
    Secret: Optional[str] = Field(None, description='')
    Type: CredentialEnumPushService = Field(..., description='')


class V2CredentialsSidPostRequest(BaseModel):
    ApiKey: Optional[str] = Field(None, description='')
    Certificate: Optional[str] = Field(None, description='')
    FriendlyName: Optional[str] = Field(None, description='')
    PrivateKey: Optional[str] = Field(None, description='')
    Sandbox: Optional[bool] = Field(None, description='')
    Secret: Optional[str] = Field(None, description='')


class V2ServicesGetResponse(BaseModel):
    meta: Optional[Meta] = None
    services: Optional[List[IpMessagingV2Service]] = None


class V2ServicesPostRequest(BaseModel):
    FriendlyName: str = Field(..., description='')


class V2ServicesServiceSidBindingsGetResponse(BaseModel):
    bindings: Optional[List[IpMessagingV2ServiceBinding]] = None
    meta: Optional[Meta] = None


class BindingType(RootModel[List[BindingEnumBindingType]]):
    root: List[BindingEnumBindingType]


class Identity(RootModel[List[str]]):
    root: List[str]


class V2ServicesServiceSidChannelsGetResponse(BaseModel):
    channels: Optional[List[IpMessagingV2ServiceChannel]] = None
    meta: Optional[Meta] = None


class Type(RootModel[List[ChannelEnumChannelType]]):
    root: List[ChannelEnumChannelType]


class V2ServicesServiceSidChannelsPostRequest(BaseModel):
    Attributes: Optional[str] = Field(None, description='')
    CreatedBy: Optional[str] = Field(None, description='')
    DateCreated: Optional[datetime] = Field(None, description='')
    DateUpdated: Optional[datetime] = Field(None, description='')
    FriendlyName: Optional[str] = Field(None, description='')
    Type: Optional[ChannelEnumChannelType] = Field(None, description='')
    UniqueName: Optional[str] = Field(None, description='')


class V2ServicesServiceSidChannelsChannelSidInvitesGetResponse(BaseModel):
    invites: Optional[List[IpMessagingV2ServiceChannelInvite]] = None
    meta: Optional[Meta] = None


class V2ServicesServiceSidChannelsChannelSidInvitesPostRequest(BaseModel):
    Identity: str = Field(..., description='')
    RoleSid: Optional[
        constr(pattern=r'^RL[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='')


class V2ServicesServiceSidChannelsChannelSidMembersGetResponse(BaseModel):
    members: Optional[List[IpMessagingV2ServiceChannelMember]] = None
    meta: Optional[Meta] = None


class V2ServicesServiceSidChannelsChannelSidMembersPostRequest(BaseModel):
    Attributes: Optional[str] = Field(None, description='')
    DateCreated: Optional[datetime] = Field(None, description='')
    DateUpdated: Optional[datetime] = Field(None, description='')
    Identity: str = Field(..., description='')
    LastConsumedMessageIndex: Optional[int] = Field(None, description='')
    LastConsumptionTimestamp: Optional[datetime] = Field(None, description='')
    RoleSid: Optional[
        constr(pattern=r'^RL[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='')


class V2ServicesServiceSidChannelsChannelSidMembersSidPostRequest(BaseModel):
    Attributes: Optional[str] = Field(None, description='')
    DateCreated: Optional[datetime] = Field(None, description='')
    DateUpdated: Optional[datetime] = Field(None, description='')
    LastConsumedMessageIndex: Optional[int] = Field(None, description='')
    LastConsumptionTimestamp: Optional[datetime] = Field(None, description='')
    RoleSid: Optional[
        constr(pattern=r'^RL[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='')


class V2ServicesServiceSidChannelsChannelSidMessagesGetResponse(BaseModel):
    messages: Optional[List[IpMessagingV2ServiceChannelMessage]] = None
    meta: Optional[Meta] = None


class V2ServicesServiceSidChannelsChannelSidMessagesPostRequest(BaseModel):
    Attributes: Optional[str] = Field(None, description='')
    Body: Optional[str] = Field(None, description='')
    DateCreated: Optional[datetime] = Field(None, description='')
    DateUpdated: Optional[datetime] = Field(None, description='')
    From: Optional[str] = Field(None, description='')
    LastUpdatedBy: Optional[str] = Field(None, description='')
    MediaSid: Optional[
        constr(pattern=r'^ME[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='')


class V2ServicesServiceSidChannelsChannelSidMessagesSidPostRequest(BaseModel):
    Attributes: Optional[str] = Field(None, description='')
    Body: Optional[str] = Field(None, description='')
    DateCreated: Optional[datetime] = Field(None, description='')
    DateUpdated: Optional[datetime] = Field(None, description='')
    From: Optional[str] = Field(None, description='')
    LastUpdatedBy: Optional[str] = Field(None, description='')


class V2ServicesServiceSidChannelsChannelSidWebhooksGetResponse(BaseModel):
    meta: Optional[Meta] = None
    webhooks: Optional[List[IpMessagingV2ServiceChannelChannelWebhook]] = None


class V2ServicesServiceSidChannelsChannelSidWebhooksPostRequest(BaseModel):
    Configuration_Filters: Optional[List[str]] = Field(
        None, alias='Configuration.Filters', description=''
    )
    Configuration_FlowSid: Optional[
        constr(pattern=r'^FW[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, alias='Configuration.FlowSid', description='')
    Configuration_Method: Optional[ChannelWebhookEnumMethod] = Field(
        None, alias='Configuration.Method', description=''
    )
    Configuration_RetryCount: Optional[int] = Field(
        None, alias='Configuration.RetryCount', description=''
    )
    Configuration_Triggers: Optional[List[str]] = Field(
        None, alias='Configuration.Triggers', description=''
    )
    Configuration_Url: Optional[str] = Field(
        None, alias='Configuration.Url', description=''
    )
    Type: ChannelWebhookEnumType = Field(..., description='')


class V2ServicesServiceSidChannelsChannelSidWebhooksSidPostRequest(BaseModel):
    Configuration_Filters: Optional[List[str]] = Field(
        None, alias='Configuration.Filters', description=''
    )
    Configuration_FlowSid: Optional[
        constr(pattern=r'^FW[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, alias='Configuration.FlowSid', description='')
    Configuration_Method: Optional[ChannelWebhookEnumMethod] = Field(
        None, alias='Configuration.Method', description=''
    )
    Configuration_RetryCount: Optional[int] = Field(
        None, alias='Configuration.RetryCount', description=''
    )
    Configuration_Triggers: Optional[List[str]] = Field(
        None, alias='Configuration.Triggers', description=''
    )
    Configuration_Url: Optional[str] = Field(
        None, alias='Configuration.Url', description=''
    )


class V2ServicesServiceSidChannelsSidPostRequest(BaseModel):
    Attributes: Optional[str] = Field(None, description='')
    CreatedBy: Optional[str] = Field(None, description='')
    DateCreated: Optional[datetime] = Field(None, description='')
    DateUpdated: Optional[datetime] = Field(None, description='')
    FriendlyName: Optional[str] = Field(None, description='')
    UniqueName: Optional[str] = Field(None, description='')


class V2ServicesServiceSidRolesPostRequest(BaseModel):
    FriendlyName: str = Field(..., description='')
    Permission: List[str] = Field(..., description='')
    Type: RoleEnumRoleType = Field(..., description='')


class V2ServicesServiceSidRolesSidPostRequest(BaseModel):
    Permission: List[str] = Field(..., description='')


class V2ServicesServiceSidUsersGetResponse(BaseModel):
    meta: Optional[Meta] = None
    users: Optional[List[IpMessagingV2ServiceUser]] = None


class V2ServicesServiceSidUsersPostRequest(BaseModel):
    Attributes: Optional[str] = Field(None, description='')
    FriendlyName: Optional[str] = Field(None, description='')
    Identity: str = Field(..., description='')
    RoleSid: Optional[
        constr(pattern=r'^RL[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='')


class V2ServicesServiceSidUsersSidPostRequest(BaseModel):
    Attributes: Optional[str] = Field(None, description='')
    FriendlyName: Optional[str] = Field(None, description='')
    RoleSid: Optional[
        constr(pattern=r'^RL[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='')


class BindingType1(RootModel[List[UserBindingEnumBindingType]]):
    root: List[UserBindingEnumBindingType]


class V2ServicesServiceSidUsersUserSidChannelsChannelSidPostRequest(BaseModel):
    LastConsumedMessageIndex: Optional[int] = Field(None, description='')
    LastConsumptionTimestamp: Optional[datetime] = Field(None, description='')
    NotificationLevel: Optional[UserChannelEnumNotificationLevel] = Field(
        None, description=''
    )


class WebhookMethod(Enum):
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'


class V2ServicesSidPostRequest(BaseModel):
    ConsumptionReportInterval: Optional[int] = Field(None, description='')
    DefaultChannelCreatorRoleSid: Optional[
        constr(pattern=r'^RL[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='')
    DefaultChannelRoleSid: Optional[
        constr(pattern=r'^RL[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='')
    DefaultServiceRoleSid: Optional[
        constr(pattern=r'^RL[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(None, description='')
    FriendlyName: Optional[str] = Field(None, description='')
    Limits_ChannelMembers: Optional[int] = Field(
        None, alias='Limits.ChannelMembers', description=''
    )
    Limits_UserChannels: Optional[int] = Field(
        None, alias='Limits.UserChannels', description=''
    )
    Media_CompatibilityMessage: Optional[str] = Field(
        None, alias='Media.CompatibilityMessage', description=''
    )
    Notifications_AddedToChannel_Enabled: Optional[bool] = Field(
        None, alias='Notifications.AddedToChannel.Enabled', description=''
    )
    Notifications_AddedToChannel_Sound: Optional[str] = Field(
        None, alias='Notifications.AddedToChannel.Sound', description=''
    )
    Notifications_AddedToChannel_Template: Optional[str] = Field(
        None, alias='Notifications.AddedToChannel.Template', description=''
    )
    Notifications_InvitedToChannel_Enabled: Optional[bool] = Field(
        None, alias='Notifications.InvitedToChannel.Enabled', description=''
    )
    Notifications_InvitedToChannel_Sound: Optional[str] = Field(
        None, alias='Notifications.InvitedToChannel.Sound', description=''
    )
    Notifications_InvitedToChannel_Template: Optional[str] = Field(
        None, alias='Notifications.InvitedToChannel.Template', description=''
    )
    Notifications_LogEnabled: Optional[bool] = Field(
        None, alias='Notifications.LogEnabled', description=''
    )
    Notifications_NewMessage_BadgeCountEnabled: Optional[bool] = Field(
        None, alias='Notifications.NewMessage.BadgeCountEnabled', description=''
    )
    Notifications_NewMessage_Enabled: Optional[bool] = Field(
        None, alias='Notifications.NewMessage.Enabled', description=''
    )
    Notifications_NewMessage_Sound: Optional[str] = Field(
        None, alias='Notifications.NewMessage.Sound', description=''
    )
    Notifications_NewMessage_Template: Optional[str] = Field(
        None, alias='Notifications.NewMessage.Template', description=''
    )
    Notifications_RemovedFromChannel_Enabled: Optional[bool] = Field(
        None, alias='Notifications.RemovedFromChannel.Enabled', description=''
    )
    Notifications_RemovedFromChannel_Sound: Optional[str] = Field(
        None, alias='Notifications.RemovedFromChannel.Sound', description=''
    )
    Notifications_RemovedFromChannel_Template: Optional[str] = Field(
        None, alias='Notifications.RemovedFromChannel.Template', description=''
    )
    PostWebhookRetryCount: Optional[int] = Field(None, description='')
    PostWebhookUrl: Optional[AnyUrl] = Field(None, description='')
    PreWebhookRetryCount: Optional[int] = Field(None, description='')
    PreWebhookUrl: Optional[AnyUrl] = Field(None, description='')
    ReachabilityEnabled: Optional[bool] = Field(None, description='')
    ReadStatusEnabled: Optional[bool] = Field(None, description='')
    TypingIndicatorTimeout: Optional[int] = Field(None, description='')
    WebhookFilters: Optional[List[str]] = Field(None, description='')
    WebhookMethod_1: Optional[WebhookMethod] = Field(
        None, alias='WebhookMethod', description=''
    )


class IpMessagingV2ServiceRole(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    date_created: Optional[datetime] = None
    date_updated: Optional[datetime] = None
    friendly_name: Optional[str] = None
    permissions: Optional[List[str]] = None
    service_sid: Optional[
        constr(pattern=r'^IS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    sid: Optional[
        constr(pattern=r'^RL[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    type: Optional[RoleEnumRoleType] = None
    url: Optional[AnyUrl] = None


class IpMessagingV2ServiceUserUserBinding(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    binding_type: Optional[UserBindingEnumBindingType] = None
    credential_sid: Optional[
        constr(pattern=r'^CR[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    date_created: Optional[datetime] = None
    date_updated: Optional[datetime] = None
    endpoint: Optional[str] = None
    identity: Optional[str] = None
    message_types: Optional[List[str]] = None
    service_sid: Optional[
        constr(pattern=r'^IS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    sid: Optional[
        constr(pattern=r'^BS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    url: Optional[AnyUrl] = None
    user_sid: Optional[
        constr(pattern=r'^US[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None


class IpMessagingV2ServiceUserUserChannel(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    channel_sid: Optional[
        constr(pattern=r'^CH[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    last_consumed_message_index: Optional[int] = None
    links: Optional[Dict[str, Any]] = None
    member_sid: Optional[
        constr(pattern=r'^MB[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    notification_level: Optional[UserChannelEnumNotificationLevel] = None
    service_sid: Optional[
        constr(pattern=r'^IS[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None
    status: Optional[UserChannelEnumChannelStatus] = None
    unread_messages_count: Optional[int] = None
    url: Optional[AnyUrl] = None
    user_sid: Optional[
        constr(pattern=r'^US[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = None


class V2ServicesServiceSidRolesGetResponse(BaseModel):
    meta: Optional[Meta] = None
    roles: Optional[List[IpMessagingV2ServiceRole]] = None


class V2ServicesServiceSidUsersUserSidBindingsGetResponse(BaseModel):
    bindings: Optional[List[IpMessagingV2ServiceUserUserBinding]] = None
    meta: Optional[Meta] = None


class V2ServicesServiceSidUsersUserSidChannelsGetResponse(BaseModel):
    channels: Optional[List[IpMessagingV2ServiceUserUserChannel]] = None
    meta: Optional[Meta] = None
